<?xml version="1.0" encoding="UTF-8"?>
<conceptSet xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="concept.xsd" xmlns="http://incubator.apache.org/uima/regex">
  <!-- @author: "renaud.richardet@epfl.ch" -->
  <!-- @author: "jean-cedric.chappelier@epfl.ch" -->


  <!-- Variables - - - - - - - - - - - - - - - - - - - -->
  <variables>

    <!-- SEPARATORS using ⊂⊃, see RegExAnnotator -->
    <!-- either the beginning of the text or a space -->
    <variable name="start_separator" value="(?:^|⊂⊃|\()" />
    <!-- either a space or the end of the text -->
    <variable name="end_separator" value="(?:⊂⊃|$|\))" />
    <!-- separator, zero or more spaces -->
    <variable name="separator_opt" value="(?:(?:⊂⊃)*|\(\))" />
    <variable name="range_separator" value="(?:-|–|to)" />
    <variable name="ratio_separator" value="(?:/|per)" />
    <variable name="approximation" value="(?:~|[Aa]pprox(?:imately|\.))" />
    <variable name="plus_minus" value="(?:±|\+/-)" />
    <variable name="math_operator" value="(?:=|&lt;=|&lt;|&gt;|&gt;=|!=)" />
    <variable name="date_separator" value="(?:(?:⊂⊃)*|-|–|/|\\)?" />

    <!-- NUMBERS -->

    <!-- written numbers -->
    <variable name="written_digit"
      value="(?:one|two|three|four|five|six|seven|eight|nine)" />
    <variable name="written_teen"
      value="(?:ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen)" />
    <variable name="written_ten"
      value="(?:twenty|thirty|forty|fifty|sixty|seventy|eighty|ninety)" />
    <variable name="written_number"
      value="(?:\v{written_teen}|\v{written_ten}(?:[ -]\v{written_digit})?|\v{written_digit})" />

    <!-- unsigned real number -->
    <variable name="real_number"
      value="(?:-?(?:\d+[\.,]\d+|\d+\.|\.\d+|\d+)(?:(?:[eE][+-]?\d+)|(?:x10\(.{0,4}\)))?)" />
    <variable name="number"
      value="(?:-?(?:\d+[\.,]\d+|\d+\.|\.\d+|\d+)(?:(?:[eE][+-]?\d+)|(?:x10\(.{0,4}\)))?|\v{written_number})" />
    <!-- TODO for some reason if I put the real number in a var it fails... -->


    <!-- SI PREFIXES -->
    <variable name="si_prefix_symbol" value="(?:E|P|T|G|M|k|h|d|c|m|µ|n|p|f)" />
    <variable name="si_prefix_name"
      value="(?:yotta|zetta|exa|peta|tera|giga|mega|kilo|hecto||deci|centi|milli|micro|nano|pico|femto|atto|zepto|yocto)" />
    <variable name="si_prefix"
      value="(?:\v{si_prefix_symbol}|\v{si_prefix_name})" />

    <!-- SI UNITS -->
    <variable name="si_unit_symbol" value="(?:m|g|s|A|K|mol)" />
    <variable name="si_unit_name"
      value="(?:meters?|kilograms?|seconds?|amperes?|kelvins?|moles?|candelas?)" />
    <variable name="si_unit" value="(?:\v{si_unit_symbol}|\v{si_unit_name})" />

    <!-- SI DERIVED UNITS WITH SPECIAL NAMES AND SYMBOLS -->
    <variable name="si_unit_derived_symbol"
      value="(?:rad|sr|°C|°F|F|C|S|H|V|Ω|J|N|Hz|lx|lm|Wb|T|W|Pa|Bq|Gy|Sv|kat|Da)" />
    <variable name="si_unit_derived_name"
      value="(?:[Rr]adians?|steradians?|[Dd]egree [Cc]elsius|farads?|[Cc]oulombs?|[Ss]iemens|henr(?:y|ies)|[Vv]olts?|[Oo]hms?|[Jj]oules?|newtons?|[Hh]ertz|lux|lumens?|webers?|teslas?|[Ww]atts?|[Pp]ascals?|becquerels?|grays?|[Ss]ieverts?|katals?|[Dd]altons?|d[Bb])" />
    <variable name="si_unit_derived"
      value="(?:\v{si_unit_derived_symbol}|\v{si_unit_derived_name})" />

    <!-- CURRENCIES UNITS -->
    <variable name="currency_unit_symbol" value="(?:€|\$|£|¥|Sfr|A\$|C\$)" /><!-- 
      TODO -->
    <variable name="currency_unit_abrevs"
      value="(?:EUR|USD|GBP|JPY|CHF|AUD|CAD|NZD|HKD|SEK)" />
    <variable name="currency_unit_name"
      value="(?:[Ee]uros?|[Dd]ollars?|[Pp]ounds? [Ss]terlings?|[Yy]ens?|[Ss]wiss [Ff]rancs?)" />
    <variable name="currency_unit"
      value="(?:\v{currency_unit_name}|\v{currency_unit_abrevs})" />

    <!-- OTHER UNITS -->
    <variable name="volume_unit" value="(?:l|L|liters?)" />
    <variable name="time_unit"
      value="(?:centur(?:y|ies)|decades?|years?|-?year-old|months?|-?month-old|weeks?|-?week-old|days?|-?day-old|h|hours?|-?hour-old|minutes?|-?minute-old|min|sec)" />
    <variable name="concentration_unit"
      value="(?:molarity|(?:\v{si_prefix})?(?:molar|mole|M|equivalents?)|pp(?:m|b|t)|meq)" />
    <variable name="other_unit"
      value="(?:tons?|bars?|curies?|Ci|roentgens?|R|U|bp|%|-?folds?|times?|fps)" />


    <!-- COMBINED UNITS -->
    <!-- only si_unit and volume_unit gets si_prefix -->
    <variable name="unit"
      value="(?:\v{si_prefix}?(?:\v{si_unit}|\v{si_unit_derived}|\v{volume_unit})|\v{time_unit}|\v{concentration_unit}|\v{currency_unit}|\v{other_unit})" />
    <variable name="unit_ratio"
      value="(?:(?:(?:\v{unit})?\v{separator_opt}\v{ratio_separator}\v{separator_opt})?\v{unit})" />

    <!-- DATES -->
    <variable name="year" value="(20|1[6789])\d\d" />
    <variable name="month"
      value="(?:[Jj]anuary|[Ff]ebruary|[Mm]arch|[Aa]pril|[Mm]ay|[Jj]une|[Jj]uly|[Aa]ugust|[Ss]eptember|[Oo]ctober|[Nn]ovember|[Dd]ecember)" />
    <!-- watchout: may -->
    <variable name="month_short"
      value="(?:[Jj]an|[Ff]eb|[Mm]ar|[Aa]pr|[Mm]ay|[Jj]un|[Jj]ul|[Aa]ug|[Ss]ep|[Oo]ct|[Nn]ov|[Dd]ec)" />
    <variable name="month_numeric" value="(?:[1-9]|1[0-2])" />
  </variables>


  <!-- Rules - - - - - - - - - - - - - - - - - - - - - -->

  <!-- SIMPLE MEASURE example: "23.3 nM" -->
  <concept name="simpleDetection" processAllRules="true">
    <rules>
      <rule
        regEx="\v{start_separator}((\v{number})\v{separator_opt}(\v{unit_ratio}))\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
    </rules>
    <createAnnotations>
      <annotation type="ch.epfl.bbp.uima.types.Measure">
        <begin group="1" />
        <end group="3" />
        <setFeature name="textValue" type="String"
          normalization="Custom" class="ch.epfl.bbp.uima.ae.SeparatorRemover">$1</setFeature>
        <setFeature name="value" type="Float" normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.NumberNormalizer">$2</setFeature>
        <setFeature name="unit" type="String" normalization="Custom"
          class="ch.epfl.bbp.uima.ae.SeparatorRemover">$3</setFeature>
      </annotation>
    </createAnnotations>
  </concept>


  <!-- RANGES example: "0 - 20 mm" -->
  <concept name="rangeDetection" processAllRules="true">
    <rules>
      <rule
        regEx="\v{start_separator}((\v{number})\v{separator_opt}\v{range_separator}\v{separator_opt}(\v{number})\v{separator_opt}(\v{unit_ratio}))\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
    </rules>
    <createAnnotations>
      <annotation type="ch.epfl.bbp.uima.types.Measure">
        <begin group="1" />
        <end group="4" />
        <setFeature name="textValue" type="String"
          normalization="Custom" class="ch.epfl.bbp.uima.ae.SeparatorRemover">$1</setFeature>
        <setFeature name="rangeStartValue" type="Float"
          normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.NumberNormalizer">$2
        </setFeature>
        <setFeature name="rangeEndValue" type="Float"
          normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.NumberNormalizer">$3</setFeature>
        <setFeature name="unit" type="String" normalization="Custom"
          class="ch.epfl.bbp.uima.ae.SeparatorRemover">$4</setFeature>
      </annotation>
    </createAnnotations>
  </concept>

  <!-- RANGES WITHOUT UNIT example: "0 - 20" -->
  <concept name="rangeNoUnitDetection" processAllRules="true">
    <rules>
      <rule
        regEx="\v{start_separator}((\v{real_number})\v{separator_opt}\v{range_separator}\v{separator_opt}(\v{real_number}))\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
    </rules>
    <createAnnotations>
      <annotation type="ch.epfl.bbp.uima.types.Measure">
        <begin group="1" />
        <end group="3" />
        <setFeature name="textValue" type="String"
          normalization="Custom" class="ch.epfl.bbp.uima.ae.SeparatorRemover">$1</setFeature>
        <setFeature name="rangeStartValue" type="Float"
          normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.NumberNormalizer">$2
        </setFeature>
        <setFeature name="rangeEndValue" type="Float"
          normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.NumberNormalizer">$3</setFeature>
        <setFeature name="unit" type="String"></setFeature><!-- empty -->
      </annotation>
    </createAnnotations>
  </concept>

  <!-- NUMBER WITHOUT UNIT example: "23.3" -->
  <!-- Theses are "deduped" by PruneMeasuresAnnotator.java -->
  <concept name="numberDetection" processAllRules="true">
    <rules>
      <rule regEx="\v{start_separator}(\v{number}\p{Punct}*)\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
    </rules>
    <createAnnotations>
      <annotation type="ch.epfl.bbp.uima.types.Measure">
        <begin group="1" />
        <end group="1" />
        <setFeature name="textValue" type="String"
          normalization="Custom" class="ch.epfl.bbp.uima.ae.SeparatorRemover">$1</setFeature>
        <setFeature name="value" type="Float" normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.NumberNormalizer">$1</setFeature>
        <setFeature name="unit" type="String"></setFeature><!-- empty -->
      </annotation>
    </createAnnotations>
  </concept>
  
  <!-- FRACTION example: "1/2" "0.2/1000" -->
  <concept name="fraction" processAllRules="true">
    <rules>
      <rule regEx="\v{start_separator}(\v{number}/\v{number})\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
    </rules>
    <createAnnotations>
      <annotation type="ch.epfl.bbp.uima.types.Measure">
        <begin group="1" />
        <end group="1" />
        <setFeature name="textValue" type="String"
          normalization="Custom" class="ch.epfl.bbp.uima.ae.SeparatorRemover">$1</setFeature>
        <setFeature name="value" type="Float" normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.FractionNormalizer">$1</setFeature>
        <setFeature name="unit" type="String"></setFeature>
      </annotation>
    </createAnnotations>
  </concept>

  <!-- TYPE OF NUMBER: N ± N -->
  <!-- EXAMPLE: "330 ± 80 copies" (mean ± standard error) -->
  <concept name="distributionDetection" processAllRules="true">
    <rules>
      <rule ruleId="distribution"
        regEx="\v{start_separator}((\v{number})\v{separator_opt}\v{plus_minus}\v{separator_opt}(\v{number})\v{separator_opt}(\v{unit}?))\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
    </rules>
    <createAnnotations>
      <annotation type="ch.epfl.bbp.uima.types.Measure">
        <begin group="1" />
        <end group="4" />
        <setFeature name="textValue" type="String"
          normalization="Custom" class="ch.epfl.bbp.uima.ae.SeparatorRemover">$1</setFeature>
        <setFeature name="meanValue" type="Float"
          normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.NumberNormalizer">$2</setFeature>
        <setFeature name="standardErrorValue" type="Float"
          normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.NumberNormalizer">$3
        </setFeature>
        <setFeature name="unit" type="String" normalization="Custom"
          class="ch.epfl.bbp.uima.ae.SeparatorRemover">$4</setFeature>
        <!-- <setFeature name="confidence" type="Confidence" /> TODO -->
      </annotation>
    </createAnnotations>
  </concept>

  <!-- VARIABLE ASSIGNMENTS -->
  <!-- EXAMPLE: "p=0.009" -->
  <concept name="varAssignmentDetection" processAllRules="true">
    <rules>
      <rule ruleId="varAssignment"
        regEx="\v{start_separator}(([a-zA-Z]*?)\v{separator_opt}(\v{math_operator})\v{separator_opt}(\v{number}))\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
    </rules>
    <createAnnotations>
      <annotation type="ch.epfl.bbp.uima.types.VariableAssignment">
        <begin group="1" />
        <end group="4" />
        <setFeature name="textValue" type="String"
          normalization="Custom" class="ch.epfl.bbp.uima.ae.SeparatorRemover">$1</setFeature>
        <setFeature name="variableName" type="String">$2</setFeature>
        <setFeature name="operator" type="String">$3</setFeature>
        <setFeature name="value" type="Float" normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.NumberNormalizer">$4</setFeature>
      </annotation>
    </createAnnotations>
  </concept>

  <!-- TYPE OF NUMBER: (approximation?) N -->
  <!-- EXAMPLES: "~330 mm", "∼20%" -->
  <concept name="approxDetection" processAllRules="true">
    <rules>
      <rule ruleId="aa"
        regEx="\v{start_separator}((\v{approximation})\v{separator_opt}(\v{real_number})\v{separator_opt}(\v{unit}))\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
    </rules>
    <createAnnotations>
      <annotation type="ch.epfl.bbp.uima.types.Measure">
        <begin group="1" />
        <end group="4" />
        <setFeature name="textValue" type="String"
          normalization="Custom" class="ch.epfl.bbp.uima.ae.SeparatorRemover">$1</setFeature>
        <setFeature name="accuracy" type="String">$2</setFeature>
        <setFeature name="value" type="Float" normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.NumberNormalizer">$3</setFeature>
        <setFeature name="unit" type="String" normalization="Custom"
          class="ch.epfl.bbp.uima.ae.SeparatorRemover">$4</setFeature>
      </annotation>
    </createAnnotations>
  </concept>

  <!-- pH (ACIDITY) -->
  <!-- EXAMPLES: "pH 3.2" -->
  <concept name="potentielHydrogene" processAllRules="true">
    <rules>
      <rule ruleId="aa"
        regEx="\v{start_separator}((pH)\v{separator_opt}(?:is|was|of|=)?\v{separator_opt}(\v{number}))"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
    </rules>
    <createAnnotations>
      <annotation type="ch.epfl.bbp.uima.types.Measure">
        <begin group="1" />
        <end group="3" />
        <setFeature name="textValue" type="String"
          normalization="Custom" class="ch.epfl.bbp.uima.ae.SeparatorRemover">$1</setFeature>
        <setFeature name="unit" type="String">pH</setFeature>
        <setFeature name="value" type="Float" normalization="Custom"
          class="ch.epfl.bbp.uima.units.normalizers.NumberNormalizer">$3</setFeature>
      </annotation>
    </createAnnotations>
  </concept>

  <!-- Dates -->
  <concept name="dates" processAllRules="true">
    <rules>
      <rule ruleId="1992-june"
        regEx="\v{start_separator}(\v{year}\v{date_separator}\v{month})"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
      <rule ruleId="mid-1990s" regEx="\v{start_separator}(mid-\v{year}s?)"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
      <rule ruleId="1998a"
        regEx="\v{start_separator}(\v{year}[a-f])\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
      <rule ruleId="1997/1998"
        regEx="\v{start_separator}(\v{year}\v{date_separator}\v{year})\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
      <rule ruleId="1995/6"
        regEx="\v{start_separator}(\v{year}\v{date_separator}\v{month_numeric})\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
      <rule ruleId="may-June"
        regEx="\v{start_separator}(\v{month}\v{date_separator}\v{month})\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
      <rule ruleId="mid-june"
        regEx="\v{start_separator}(mid\v{date_separator}\v{month})\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
      <rule ruleId="june 2004"
        regEx="\v{start_separator}(\v{month}\v{date_separator}\v{year})\v{end_separator}"
        matchStrategy="matchAll" matchType="uima.tcas.DocumentAnnotation"
        confidence="1.0" />
    </rules>
    <createAnnotations>
      <annotation type="ch.epfl.bbp.uima.types.Measure">
        <begin group="1" />
        <end group="1" />
        <setFeature name="textValue" type="String"
          normalization="Custom" class="ch.epfl.bbp.uima.ae.SeparatorRemover">$1</setFeature>
        <setFeature name="unit" type="String">Date</setFeature>
      </annotation>
    </createAnnotations>
  </concept>

</conceptSet>
